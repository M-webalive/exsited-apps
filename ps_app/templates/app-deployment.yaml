apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ps-app.fullname" . }}
  labels:
    {{- include "ps-app.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ps-app
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ps-app
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: ps-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          # We override the command so we can pass secret values safely to Java
          command: ["sh","-lc"]
          args:
            - >
              java
              -Dgrails.env=${GRAILS_ENV}
              -Dserver.port=${SERVER_PORT}
              -DdataSource.url=jdbc:mysql://${DB_HOST}:3306/${DB_NAME}
              -DdataSource.username=${DB_USER}
              -DdataSource.password=${DB_PASSWORD}
              -Dproduct=EXSITED
              -jar /app/app.jar
          env:
            - name: GRAILS_ENV
              value: {{ .Values.app.grailsEnv | quote }}
            - name: SERVER_PORT
              value: "{{ .Values.service.port }}"
            - name: DB_HOST
              value: {{ include "ps-app.mariadb.fullname" . | quote }}
            - name: DB_NAME
              value: {{ .Values.mariadb.database | quote }}
            - name: DB_USER
              value: {{ .Values.mariadb.user | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ps-app.mariadb.fullname" . }}-secret
                  key: mariadb-password
          {{- if .Values.app.appConfig }}
          volumeMounts:
            - name: app-config
              mountPath: /app/src/main/webapp/WEB-INF/app_config.properties
              subPath: app_config.properties
              readOnly: true
          {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.readinessPath | quote }}
              port: http
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 8
          livenessProbe:
            httpGet:
              path: {{ .Values.app.livenessPath | quote }}
              port: http
            initialDelaySeconds: 90
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.app.appConfig }}
      volumes:
        - name: app-config
          configMap:
            name: {{ include "ps-app.fullname" . }}-config
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
